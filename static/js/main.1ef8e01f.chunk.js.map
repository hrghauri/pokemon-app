{"version":3,"sources":["images/light-grey-terrazzo.png","api.js","services/pokemon.js","components/ErrorHandlingComponent.js","components/PokemonNameSearchBox.js","components/PokemonCard.js","components/ListFooter.js","components/FilteringComponent.js","components/PokemonsList.js","components/PokemonPopup.js","PokemonApp.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","api","pokemon","getPokemonCardsByName","name","fetch","concat","then","response","json","jsonResponse","cards","getPokemonCardsByExactName","ErrorHandlingComponent","_ref","hasErrorOccured","error","react_default","a","createElement","renderprops","from","opacity","to","config","duration","props","style","styles","root","message","color","PokemonNameSearchBox","changePokemonName","searchPokemon","isDisabled","currentSearchPokemonName","Paper","InputBase","input","placeholder","inputProps","aria-label","onChange","e","preventDefault","target","value","disabled","IconButton","iconButton","type","onClick","length","Search_default","padding","display","alignItems","width","marginLeft","flex","PokemonCard","pokemonCard","onPokemonCardClick","Grid","item","xs","sm","md","textAlign","className","src","imageUrl","id","alt","ListFooter","numOfPages","currentPage","onPageSelect","Button","variant","NativeSelect","optionValue","parseInt","options","i","push","map","key","renderOtherPageOptions","FilteringComponent","filterName","allFilteringValues","selectedFilteringValues","onFilterValueSelection","onFilterClose","open","anchorEL","Dialog","onClose","filteringValue","FormLabel","Checkbox","checked","includes","filterType","filterValue","PokemonsList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_getResetState","pokemonCards","typesFilter","reduce","acc","currentPokemonCard","types","forEach","setsFilter","set","filteredPokemonCardsList","filters","filtersOpen","_reset","setState","_getNumberOfPages","dataLength","remainder","state","maxPageSize","quotient","Math","floor","_applyTypesFilter","filter","pokemonCardsList","allAppliedTypeFilters","keys","currentTypeFilterKey","currentPokemonCardTypes","match","_applySetsFilter","allAppliedSetFilters","currentSetFilterKey","currentPokemonCardSet","_applyFilterAndReturnFilteredList","handlePageSelect","pageNum","handleResetFilters","handleFilter","newfilteredPokemonCardsList","handleFilterClose","index","indexOf","splice","handleFilterOpen","newFiltersOpen","currentTarget","renderTypesFilter","Fragment","renderSetsFilter","renderResetFilter","renderPokemonCardsList","visiblePokemonCardsList","startingIndexInclusive","endingIndexInclusive","container","spacing","renderListFooter","possibleNewState","objectSpread","Component","PokemonPopup","handlePopUpClose","other","objectWithoutProperties","assign","fullWidth","maxWidth","DialogTitle","textAllign","margin","textTransform","fontWeight","closeButton","Close_default","Card","CardHeader","hp","position","left","top","series","height","CardContent","Typography","component","text","Array","isArray","media","paddingTop","PokemonApp","handlePokemonCardOnClick","pokemonCardId","currentClickedPokemonCardId","isPopupOpen","handlePopupClose","handleChangePokemonName","pokemonName","handleSearchPokemon","_handleError","setTimeout","isSearchInProgress","pokemonService","Error","catch","finally","searchedPokemonTimesNegative","renderErrorHandlingComponent","renderSearchBox","renderBottom","PokemonsList_PokemonsList","renderPopUpIfNeccessary","_this$state$pokemonCa","slicedToArray","document","body","Background","Boolean","window","location","hostname","ReactDOM","render","src_PokemonApp","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ef8e01f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/light-grey-terrazzo.37434414.png\";","const api = 'https://api.pokemontcg.io/v1/';\n\nexport default api;\n","import api from '../api';\n\nexport default {\n  getPokemonCardsByName: name =>\n    fetch(api + `cards?name=${name}`)\n      .then(response => response.json())\n      .then(jsonResponse => jsonResponse.cards),\n  getPokemonCardsByExactName: name =>\n    fetch(api + `cards?name=\"${name}\"`)\n      .then(response => response.json())\n      .then(jsonResponse => jsonResponse.cards)\n};\n","import React from 'react';\nimport { Spring } from 'react-spring/renderprops';\n\nexport default function ErrorHandlingComponent({ hasErrorOccured, error }) {\n  return (\n    <div>\n      {hasErrorOccured && (\n        <Spring\n          from={{ opacity: 0 }}\n          to={{ opacity: 1 }}\n          config={{ duration: 1500 }}\n        >\n          {props => (\n            <div style={props}>\n              <div style={styles.root}>\n                <div>Error Occured.</div>\n                <div>{error.message}</div>\n              </div>\n            </div>\n          )}\n        </Spring>\n      )}\n    </div>\n  );\n}\n\nconst styles = {\n  root: {\n    color: 'red'\n  }\n};\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport default function PokemonNameSearchBox({\n  changePokemonName,\n  searchPokemon,\n  isDisabled,\n  currentSearchPokemonName\n}) {\n  const onChange = e => {\n    e.preventDefault();\n    changePokemonName(e.target.value);\n  };\n\n  const onSearch = e => {\n    e.preventDefault();\n    searchPokemon();\n  };\n\n  return (\n    <form>\n      <Paper style={styles.root}>\n        <InputBase\n          style={styles.input}\n          placeholder=\"Search for your favourite Pokemon\"\n          inputProps={{ 'aria-label': 'Search for your favourite Pokemon' }}\n          onChange={onChange}\n          disabled={isDisabled}\n          value={currentSearchPokemonName}\n        />\n        <IconButton\n          style={styles.iconButton}\n          aria-label=\"Search\"\n          type=\"submit\"\n          onClick={onSearch}\n          disabled={isDisabled || currentSearchPokemonName.length === 0}\n        >\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n    </form>\n  );\n}\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 300\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  }\n};\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nexport default function PokemonCard({ pokemonCard, onPokemonCardClick }) {\n  return (\n    <Grid item xs={12} sm={6} md={3} style={{ textAlign: 'center' }}>\n      <div className=\"pokemon-Card\">\n        <img\n          src={pokemonCard.imageUrl}\n          onClick={() => onPokemonCardClick(pokemonCard.id)}\n          alt={pokemonCard.name}\n        />\n      </div>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Button from '@material-ui/core/Button';\n\nexport default function ListFooter({ numOfPages, currentPage, onPageSelect }) {\n  const renderOtherPageOptions = () => {\n    const options = [];\n    for (let i = 1; i <= numOfPages; i++) {\n      options.push(i);\n    }\n\n    return options.map(optionValue => {\n      return (\n        <option key={optionValue} value={optionValue}>\n          {optionValue}\n        </option>\n      );\n    });\n  };\n\n  const optionsSelect = e => {\n    const optionValue = parseInt(e.target.value);\n    onPageSelect(optionValue);\n  };\n\n  const onPreviousClick = () => {\n    const previousPage = currentPage - 1;\n    onPageSelect(previousPage);\n  };\n\n  const onNextClick = () => {\n    const nextPage = currentPage + 1;\n    onPageSelect(nextPage);\n  };\n\n  return (\n    <div>\n      {currentPage !== 1 && (\n        <Button variant=\"contained\" onClick={onPreviousClick}>\n          Previous\n        </Button>\n      )}\n      {currentPage === 1 && (\n        <Button variant=\"contained\" color=\"secondary\" disabled>\n          Previous\n        </Button>\n      )}\n      <NativeSelect value={currentPage} onChange={optionsSelect}>\n        {renderOtherPageOptions()}\n      </NativeSelect>\n      {currentPage !== numOfPages && (\n        <Button variant=\"contained\" onClick={onNextClick}>\n          Next\n        </Button>\n      )}\n      {currentPage === numOfPages && (\n        <Button variant=\"contained\" color=\"secondary\" disabled>\n          Next\n        </Button>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\n\nexport default function FilteringComponent({\n  filterName,\n  allFilteringValues,\n  selectedFilteringValues,\n  onFilterValueSelection,\n  onFilterClose,\n  open,\n  anchorEL\n}) {\n  const onCheck = (name, filterType, filterValue) => {\n    onFilterValueSelection(name, filterType, filterValue);\n  };\n\n  const renderCheckBoxes = () => {\n    return allFilteringValues.map(filteringValue => {\n      return (\n        <div key={filteringValue}>\n          <FormLabel>{filteringValue}</FormLabel>\n          <Checkbox\n            checked={selectedFilteringValues.includes(filteringValue)}\n            onChange={e =>\n              onCheck(filterName, filteringValue, e.target.checked)\n            }\n          />\n        </div>\n      );\n    });\n  };\n\n  return (\n    <Dialog open={open} onClose={() => onFilterClose(filterName)}>\n      {renderCheckBoxes()}\n    </Dialog>\n  );\n}\n","import React, { Component } from 'react';\nimport PokemonCard from './PokemonCard';\nimport ListFooter from './ListFooter';\nimport FilteringComponent from './FilteringComponent';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nexport default class PokemonsList extends Component {\n  constructor(props) {\n    super(props);\n    const possibleNewState = this._getResetState();\n    this.state = { maxPageSize: 8, ...possibleNewState };\n  }\n\n  _getResetState = () => {\n    if (this.props.pokemonCards.length > 0) {\n      const typesFilter = this.props.pokemonCards.reduce(\n        (acc, currentPokemonCard) => {\n          if (currentPokemonCard.types)\n            currentPokemonCard.types.forEach(type => {\n              acc[type] = false;\n            });\n          return acc;\n        },\n        {}\n      );\n      const setsFilter = this.props.pokemonCards.reduce(\n        (acc, currentPokemonCard) => {\n          if (currentPokemonCard.set) acc[currentPokemonCard.set] = false;\n          return acc;\n        },\n        {}\n      );\n\n      return {\n        currentPage: 1,\n        filteredPokemonCardsList: this.props.pokemonCards,\n        filters: {\n          typesFilter,\n          setsFilter\n        },\n        filtersOpen: [],\n        anchorEL: {}\n      };\n    } else\n      return {\n        currentPage: 0,\n        filteredPokemonCardsList: [],\n        filters: {},\n        filtersOpen: [],\n        anchorEL: {}\n      };\n  };\n\n  _reset = () => {\n    this.setState(this._getResetState());\n  };\n\n  _getNumberOfPages = dataLength => {\n    if (dataLength === 0) return 0;\n\n    const remainder = dataLength % this.state.maxPageSize;\n    const quotient = Math.floor(dataLength / this.state.maxPageSize);\n\n    if (remainder === 0) return quotient;\n    else return quotient + 1;\n  };\n\n  _applyTypesFilter = (filter, pokemonCardsList) => {\n    const allTypeFilterKeys = Object.keys(filter.typesFilter);\n\n    const allAppliedTypeFilters = allTypeFilterKeys.reduce(\n      (acc, currentTypeFilterKey) => {\n        const currentFilterValue = filter.typesFilter[currentTypeFilterKey];\n        if (currentFilterValue === true) {\n          acc.push(currentTypeFilterKey);\n        }\n        return acc;\n      },\n      []\n    );\n\n    if (allAppliedTypeFilters.length === 0) return pokemonCardsList;\n    else {\n      const newfilteredPokemonCardsList = pokemonCardsList.reduce(\n        (acc, currentPokemonCard) => {\n          const currentPokemonCardTypes = currentPokemonCard.types;\n          let match = true;\n          for (let i = 0; i < allAppliedTypeFilters.length; i++) {\n            if (currentPokemonCardTypes) {\n              if (!currentPokemonCardTypes.includes(allAppliedTypeFilters[i])) {\n                match = false;\n                break;\n              }\n            } else {\n              match = false;\n              break;\n            }\n          }\n\n          if (match) acc.push(currentPokemonCard);\n\n          return acc;\n        },\n        []\n      );\n\n      return newfilteredPokemonCardsList;\n    }\n  };\n\n  _applySetsFilter = (filter, pokemonCardsList) => {\n    const allSetFilterKeys = Object.keys(filter.setsFilter);\n    const allAppliedSetFilters = allSetFilterKeys.reduce(\n      (acc, currentSetFilterKey) => {\n        const currentFilterValue = filter.setsFilter[currentSetFilterKey];\n        if (currentFilterValue === true) {\n          acc.push(currentSetFilterKey);\n        }\n        return acc;\n      },\n      []\n    );\n\n    if (allAppliedSetFilters.length === 0) return pokemonCardsList;\n    else {\n      const newfilteredPokemonCardsList = pokemonCardsList.reduce(\n        (acc, currentPokemonCard) => {\n          const currentPokemonCardSet = currentPokemonCard.set;\n          if (allAppliedSetFilters.includes(currentPokemonCardSet))\n            acc.push(currentPokemonCard);\n          return acc;\n        },\n        []\n      );\n\n      return newfilteredPokemonCardsList;\n    }\n  };\n\n  _applyFilterAndReturnFilteredList = filter => {\n    const typesFilteredList = this._applyTypesFilter(\n      filter,\n      this.props.pokemonCards\n    );\n\n    //Set Filter feature is broken; will fix it later\n    // const setsFilterList = this._applySetsFilter(filter, typesFilteredList);\n    return typesFilteredList;\n  };\n\n  handlePageSelect = pageNum => {\n    this.setState({\n      currentPage: pageNum\n    });\n  };\n\n  handleResetFilters = () => {\n    this._reset();\n  };\n\n  handleFilter = (filterName, filterType, filterValue) => {\n    const filters = this.state.filters;\n    filters[filterName + 'sFilter'][filterType] = filterValue;\n\n    const newfilteredPokemonCardsList = this._applyFilterAndReturnFilteredList(\n      filters\n    );\n\n    this.setState({\n      filters,\n      filteredPokemonCardsList: newfilteredPokemonCardsList,\n      currentPage: 1\n    });\n  };\n\n  handleFilterClose = filterName => {\n    const index = this.state.filtersOpen.indexOf(filterName);\n    if (index !== -1) {\n      this.state.filtersOpen.splice(index, 1);\n      this.setState({\n        filtersOpen: this.state.filtersOpen\n      });\n    }\n  };\n\n  handleFilterOpen = (filterName, e) => {\n    const newFiltersOpen = this.state.filtersOpen;\n    newFiltersOpen.push(filterName);\n    const anchorEL = e.currentTarget;\n\n    this.setState({\n      filtersOpen: newFiltersOpen,\n      anchorEL\n    });\n  };\n\n  renderTypesFilter = key => {\n    const allTypeFilterKeys = Object.keys(this.state.filters.typesFilter);\n    const allAppliedTypeFilters = allTypeFilterKeys.reduce(\n      (acc, currentTypeFilterKey) => {\n        const currentFilterValue = this.state.filters.typesFilter[\n          currentTypeFilterKey\n        ];\n        if (currentFilterValue === true) {\n          acc.push(currentTypeFilterKey);\n        }\n        return acc;\n      },\n      []\n    );\n\n    if (this.state.filtersOpen.includes('type')) {\n      return (\n        <React.Fragment key={key}>\n          <FilteringComponent\n            filterName={'type'}\n            allFilteringValues={Object.keys(this.state.filters.typesFilter)}\n            selectedFilteringValues={allAppliedTypeFilters}\n            onFilterValueSelection={this.handleFilter}\n            onFilterClose={this.handleFilterClose}\n            open={true}\n            anchorEL={this.state.anchorEL}\n          />\n\n          <Button key={key} variant=\"contained\" disabled>\n            Types Filter\n          </Button>\n        </React.Fragment>\n      );\n    } else\n      return (\n        <Button\n          key={key}\n          variant=\"contained\"\n          onClick={e => this.handleFilterOpen('type', e)}\n        >\n          Types Filter\n        </Button>\n      );\n  };\n\n  renderSetsFilter = key => {\n    const allSetFilterKeys = Object.keys(this.state.filters.setsFilter);\n    const allAppliedSetFilters = allSetFilterKeys.reduce(\n      (acc, currentSetFilterKey) => {\n        const currentFilterValue = this.state.filters.setsFilter[\n          currentSetFilterKey\n        ];\n        if (currentFilterValue === true) {\n          acc.push(currentSetFilterKey);\n        }\n        return acc;\n      },\n      []\n    );\n\n    if (this.state.filtersOpen.includes('set')) {\n      return (\n        <React.Fragment key={key}>\n          <FilteringComponent\n            filterName={'set'}\n            allFilteringValues={Object.keys(this.state.filters.setsFilter)}\n            selectedFilteringValues={allAppliedSetFilters}\n            onFilterValueSelection={this.handleFilter}\n            onFilterClose={this.handleFilterClose}\n            open={true}\n            anchorEL={this.state.anchorEL}\n          />\n          <Button key={key} variant=\"contained\" disabled>\n            Set Filter\n          </Button>\n        </React.Fragment>\n      );\n    } else\n      return (\n        <Button\n          key={key}\n          variant=\"contained\"\n          onClick={e => this.handleFilterOpen('set', e)}\n        >\n          Set Filter\n        </Button>\n      );\n  };\n\n  renderResetFilter = key => {\n    return <div key={key} />;\n  };\n\n  renderPokemonCardsList = key => {\n    const visiblePokemonCardsList = [];\n    const startingIndexInclusive =\n      (this.state.currentPage - 1) * this.state.maxPageSize;\n    const endingIndexInclusive =\n      this.state.currentPage * this.state.maxPageSize - 1;\n\n    for (let i = startingIndexInclusive; i <= endingIndexInclusive; i++) {\n      if (this.state.filteredPokemonCardsList[i])\n        visiblePokemonCardsList.push(this.state.filteredPokemonCardsList[i]);\n    }\n\n    return (\n      <div className=\"pokemon-cards-list\" key={key}>\n        <Grid container spacing={2}>\n          {visiblePokemonCardsList.map(pokemonCard => {\n            return (\n              <PokemonCard\n                pokemonCard={pokemonCard}\n                onPokemonCardClick={this.props.onPokemonCardClick}\n                key={pokemonCard.id}\n              />\n            );\n          })}\n        </Grid>\n      </div>\n    );\n  };\n\n  renderListFooter = key => {\n    const numOfPages = this._getNumberOfPages(\n      this.state.filteredPokemonCardsList.length\n    );\n    if (numOfPages === 0) return null;\n\n    const currentPage = this.state.currentPage;\n\n    return (\n      <ListFooter\n        key={key}\n        onPageSelect={this.handlePageSelect}\n        numOfPages={numOfPages}\n        currentPage={currentPage}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {[\n          //Set Filter feature is broken; will fix it later\n          // this.renderSetsFilter(0),\n          this.renderTypesFilter(1),\n          this.renderResetFilter(2),\n          this.renderPokemonCardsList(3),\n          this.renderListFooter(4)\n        ]}\n      </div>\n      // <div>\n      //   {this.renderListFooter(1)} {this.renderResetFilter(2)}\n      //   {this.renderPokemonCardsList(3)} {this.renderListFooter(4)}\n      // </div>\n    );\n  }\n}\n","import React from 'react';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nexport default function PokemonPopup({\n  handlePopUpClose,\n  pokemonCard,\n  ...other\n}) {\n  return (\n    <Dialog\n      onClose={handlePopUpClose}\n      {...other}\n      fullWidth={true}\n      maxWidth={'sm'}\n    >\n      <DialogTitle\n        id={pokemonCard.id}\n        style={{\n          textAllign: 'center',\n          margin: 'auto',\n          color: 'grey',\n          textTransform: 'uppercase',\n          fontWeight: '300'\n        }}\n      >\n        {pokemonCard.name}\n      </DialogTitle>\n      <IconButton\n        aria-label=\"Close\"\n        style={styles.closeButton}\n        onClick={handlePopUpClose}\n      >\n        <CloseIcon />\n      </IconButton>\n      <Card>\n        <CardHeader />\n\n        {pokemonCard.hp && (\n          <div style={{ position: 'absolute', left: '320px' }}>\n            <span>HP: </span>\n            <span>{pokemonCard.hp}</span>\n          </div>\n        )}\n        {pokemonCard.types && (\n          <div style={{ position: 'absolute', left: '320px', top: '140px' }}>\n            <span>Types: </span>\n            {pokemonCard.types.map(type => {\n              return <span key={type}>{type} </span>;\n            })}\n          </div>\n        )}\n        {pokemonCard.set && (\n          <div style={{ position: 'absolute', left: '320px', top: '190px' }}>\n            <span>Set: </span>\n            <span>{pokemonCard.set}</span>\n          </div>\n        )}\n        {pokemonCard.series && (\n          <div style={{ position: 'absolute', left: '320px', top: '240px' }}>\n            <span>Series: </span>\n            <span>{pokemonCard.series}</span>\n          </div>\n        )}\n        <div>\n          <img\n            src={pokemonCard.imageUrl}\n            style={{ width: '290px', height: '400px', display: 'inline' }}\n            alt={pokemonCard.name}\n          />\n        </div>\n\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {pokemonCard.text &&\n            Array.isArray(pokemonCard.text) &&\n            pokemonCard.text.length > 0\n              ? pokemonCard.text[0]\n              : 'No Text Available for this Pokemon.'}\n          </Typography>\n        </CardContent>\n      </Card>\n    </Dialog>\n  );\n}\n\nconst styles = {\n  media: {\n    paddingTop: '56.25%' // 16:9\n  },\n  closeButton: {\n    position: 'absolute'\n  }\n};\n","import React, { Component } from 'react';\nimport Background from './images/light-grey-terrazzo.png';\n\nimport pokemonService from './services/pokemon';\n\nimport ErrorHandlingComponent from './components/ErrorHandlingComponent';\nimport PokemonNameSearchBox from './components/PokemonNameSearchBox';\nimport PokemonsList from './components/PokemonsList';\nimport PokemonPopup from './components/PokemonPopup';\n\nclass PokemonApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemonCards: [],\n      isSearchInProgress: false,\n      currentSearchPokemonName: '',\n      hasErrorOccured: false,\n      error: {},\n      currentClickedPokemonCardId: '',\n      isPopupOpen: false,\n      searchedPokemonTimesNegative: 0 // a Hack to  make sure to completely rerender PokemonList once a search is performed again\n    };\n    document.body.style = 'background-image:' + `url(${Background})`;\n  }\n\n  handlePokemonCardOnClick = pokemonCardId => {\n    this.setState({\n      currentClickedPokemonCardId: pokemonCardId,\n      isPopupOpen: true\n    });\n  };\n\n  handlePopupClose = () => {\n    this.setState({\n      currentClickedPokemonCardId: '',\n      isPopupOpen: false\n    });\n  };\n\n  handleChangePokemonName = pokemonName => {\n    this.setState({\n      currentSearchPokemonName: pokemonName\n    });\n  };\n\n  handleSearchPokemon = () => {\n    const _handleError = error => {\n      this.setState(\n        {\n          hasErrorOccured: true,\n          error\n        },\n        () => {\n          setTimeout(() => {\n            this.setState({\n              hasErrorOccured: false,\n              error: {}\n            });\n          }, 2500);\n        }\n      );\n    };\n\n    this.setState({ isSearchInProgress: true }, () => {\n      pokemonService\n        .getPokemonCardsByName(this.state.currentSearchPokemonName)\n        .then(cards => {\n          if (cards.length === 0) {\n            let error = new Error('No pokemons found by this name.');\n            _handleError(error);\n          } else {\n            this.setState({\n              pokemonCards: cards\n            });\n          }\n        })\n        .catch(error => {\n          _handleError(error);\n        })\n        .finally(() => {\n          const searchedPokemonTimesNegative =\n            this.state.searchedPokemonTimesNegative - 1; // a Hack\n          this.setState({\n            isSearchInProgress: false,\n            searchedPokemonTimesNegative\n          });\n        });\n    });\n  };\n\n  renderErrorHandlingComponent = key => {\n    return (\n      <ErrorHandlingComponent\n        hasErrorOccured={this.state.hasErrorOccured}\n        error={this.state.error}\n        key={key}\n      />\n    );\n  };\n\n  renderSearchBox = key => {\n    return (\n      <div className=\"pokemon-search-text-box\" key={key}>\n        <PokemonNameSearchBox\n          key={key}\n          currentSearchPokemonName={this.state.currentSearchPokemonName}\n          isDisabled={this.state.isSearchInProgress}\n          searchPokemon={this.handleSearchPokemon}\n          changePokemonName={this.handleChangePokemonName}\n        />\n      </div>\n    );\n  };\n\n  renderBottom = key => {\n    if (this.state.pokemonCards.length === 0)\n      return (\n        <div key={key} className=\"bottom-text\">\n          Search for your favourite Pokemon!\n        </div>\n      );\n    else\n      return (\n        <PokemonsList\n          pokemonCards={this.state.pokemonCards}\n          onPokemonCardClick={this.handlePokemonCardOnClick}\n          key={this.state.searchedPokemonTimesNegative} // a Hack\n        />\n      );\n  };\n\n  renderPopUpIfNeccessary = key => {\n    if (this.state.isPopupOpen) {\n      const [currentPokemonCard] = this.state.pokemonCards.filter(\n        pokemonCard => this.state.currentClickedPokemonCardId === pokemonCard.id\n      );\n\n      return (\n        <PokemonPopup\n          handlePopUpClose={this.handlePopupClose}\n          pokemonCard={currentPokemonCard}\n          key={key}\n          open={true}\n        />\n      );\n    } else return null;\n  };\n\n  render() {\n    return (\n      <div className=\"pokemon-app\">\n        <h1>Pokemon Search app</h1>\n        {[\n          this.renderErrorHandlingComponent(1),\n          this.renderSearchBox(2),\n          this.renderBottom(3),\n          this.renderPopUpIfNeccessary(4)\n        ]}\n      </div>\n    );\n  }\n}\n\nexport default PokemonApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PokemonApp from './PokemonApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PokemonApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}